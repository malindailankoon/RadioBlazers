options:
  parameters:
    author: malindatemp
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: base_to_user_flowgraph
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: the base transmitter and the user receiver flowgraph
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 40.0]
    rotation: 0
    state: enabled

blocks:
- name: access_key
  id: variable
  parameters:
    comment: ''
    value: '''11100001010110101110100010010011'''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 280.0]
    rotation: 0
    state: enabled
- name: excess_bw
  id: variable
  parameters:
    comment: ''
    value: '0.35'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 968.0]
    rotation: 0
    state: enabled
- name: freq_offset
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Frequency Offset
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '-0.1'
    step: '0.001'
    stop: '0.1'
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1424, 1328.0]
    rotation: 0
    state: enabled
- name: hdr_format
  id: variable
  parameters:
    comment: header_format_default
    value: digital.header_format_default(access_key, 0)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 272.0]
    rotation: 0
    state: enabled
- name: nfilts
  id: variable
  parameters:
    comment: ''
    value: '32'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1928, 1320.0]
    rotation: 0
    state: enabled
- name: noise_volt
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Noise Voltage
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '0.01'
    stop: '1'
    value: '0.5'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1120, 1328.0]
    rotation: 0
    state: enabled
- name: phase_bw
  id: variable
  parameters:
    comment: ''
    value: '0.0628'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1960, 1048.0]
    rotation: 0
    state: enabled
- name: qpsk
  id: variable_constellation_rect
  parameters:
    comment: ''
    const_points: '[0.707+0.707j, -0.707+0.707j, -0.707-0.707j, 0.707-0.707j]'
    imag_sect: '2'
    precision: '8'
    real_sect: '2'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: '[0, 1, 2, 3]'
    w_imag_sect: '1'
    w_real_sect: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 932.0]
    rotation: 0
    state: enabled
- name: rrc_taps
  id: variable
  parameters:
    comment: ''
    value: firdes.root_raised_cosine(nfilts, nfilts, 1.0/float(sps), 0.35, 11*sps*nfilts)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2008, 1320.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 288.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [424, 1056.0]
    rotation: 0
    state: enabled
- name: taps
  id: variable
  parameters:
    comment: ''
    value: '[1.0 + 0.0j, ]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1184, 1248.0]
    rotation: 0
    state: enabled
- name: time_offset
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Timing Offset
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0.999'
    step: '0.0001'
    stop: '1.001'
    value: '1.000'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1280, 1328.0]
    rotation: 0
    state: enabled
- name: usrp_rate
  id: variable
  parameters:
    comment: ''
    value: '768000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 1056.0]
    rotation: 0
    state: enabled
- name: variable_adaptive_algorithm_0
  id: variable_adaptive_algorithm
  parameters:
    comment: ''
    cons: qpsk
    delta: '10.0'
    ffactor: '0.99'
    modulus: '4'
    step_size: '.0001'
    type: cma
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2344, 1000.0]
    rotation: 0
    state: enabled
- name: ConFile
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: the confirm.txt file
    short_id: ''
    type: str
    value: default
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [176, 584.0]
    rotation: 0
    state: enabled
- name: MsgFile
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: the packet file
    short_id: ''
    type: str
    value: default
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 520.0]
    rotation: 0
    state: enabled
- name: RnFile
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: the packet file
    short_id: ''
    type: str
    value: default
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 648.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: C:\Users\immkb\Desktop\semester_3\communication_design_project\pickaxe\rec_side_stuff\misc\output.tmp
    type: byte
    unbuffered: 'True'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2024, 2020.0]
    rotation: 180
    state: true
- name: blocks_repack_bits_bb_1
  id: blocks_repack_bits_bb
  parameters:
    affinity: ''
    alias: ''
    align_output: 'False'
    comment: ''
    endianness: gr.GR_MSB_FIRST
    k: '1'
    l: '8'
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2360, 2032.0]
    rotation: 180
    state: enabled
- name: blocks_tagged_stream_mux_0
  id: blocks_tagged_stream_mux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    lengthtagname: packet_len
    maxoutbuf: '0'
    minoutbuf: '0'
    ninputs: '2'
    tag_preserve_head_pos: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1224, 444.0]
    rotation: 0
    state: true
- name: blocks_throttle2_0_0_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: usrp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 1176.0]
    rotation: 0
    state: true
- name: blocks_unpack_k_bits_bb_0
  id: blocks_unpack_k_bits_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '2'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1904, 1828.0]
    rotation: 0
    state: enabled
- name: channels_channel_model_0
  id: channels_channel_model
  parameters:
    affinity: ''
    alias: ''
    block_tags: 'True'
    comment: ''
    epsilon: time_offset
    freq_offset: freq_offset
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_voltage: noise_volt
    seed: '0'
    taps: taps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1304, 1140.0]
    rotation: 0
    state: enabled
- name: digital_constellation_decoder_cb_0_1
  id: digital_constellation_decoder_cb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: qpsk
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 1844.0]
    rotation: 0
    state: enabled
- name: digital_constellation_modulator_0_0
  id: digital_constellation_modulator
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: qpsk
    differential: 'True'
    excess_bw: excess_bw
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_symbol: sps
    truncate: 'False'
    verbose: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 1152.0]
    rotation: 0
    state: enabled
- name: digital_correlate_access_code_xx_ts_0_0
  id: digital_correlate_access_code_xx_ts
  parameters:
    access_code: '11100001010110101110100010010011'
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tagname: '"packet_len"'
    threshold: '2'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2232, 1804.0]
    rotation: 0
    state: enabled
- name: digital_costas_loop_cc_0_1
  id: digital_costas_loop_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    order: '4'
    use_snr: 'False'
    w: phase_bw
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 1860.0]
    rotation: 0
    state: enabled
- name: digital_diff_decoder_bb_0_1
  id: digital_diff_decoder_bb
  parameters:
    affinity: ''
    alias: ''
    coding: digital.DIFF_DIFFERENTIAL
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    modulus: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 1832.0]
    rotation: 0
    state: enabled
- name: digital_linear_equalizer_0
  id: digital_linear_equalizer
  parameters:
    adapt_after_training: 'True'
    affinity: ''
    alg: variable_adaptive_algorithm_0
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_taps: '15'
    sps: '2'
    training_sequence: '[ ]'
    training_start_tag: corr_est
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2312, 1124.0]
    rotation: 0
    state: enabled
- name: digital_map_bb_0_1
  id: digital_map_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    map: '[0,1,2,3]'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1600, 1828.0]
    rotation: 0
    state: enabled
- name: digital_pfb_clock_sync_xxx_0
  id: digital_pfb_clock_sync_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    filter_size: nfilts
    init_phase: nfilts/2
    loop_bw: phase_bw
    max_dev: '1.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    osps: '2'
    sps: sps
    taps: rrc_taps
    type: ccf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1960, 1128.0]
    rotation: 0
    state: enabled
- name: digital_protocol_formatter_bb_0
  id: digital_protocol_formatter_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    format: hdr_format
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 384.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport os.path\nimport time\nimport pmt\n\n\"\"\"\n\
      states: \n    0 - main cheking state: TODO\n    1 - this state will again send\
      \ the current packet, then start the timer change the state back to 0\n    2\
      \ - this will send the next packet, start the timer and then change the state\
      \ back to 0 and write \"False\" to the confirm.txt file\n    3 - sending the\
      \ end_of_file packet then will shift to state 4\n    4 - idle state. nothing\
      \ will happen from this point on\n    \n    7 - ERROR STATE\n\"\"\"\n\nclass\
      \ Stopwatch:\n    def __init__(self):\n        self.start_time = None\n    \
      \    self.elapsed = 0.0\n    \n    def start(self):\n        if self.start_time\
      \ is None:\n            self.start_time = time.perf_counter()\n    \n    def\
      \ stop(self):\n        if self.start_time is not None:\n            self.elapsed\
      \ += time.perf_counter() - self.start_time\n            self.start_time = None\n\
      \    \n    def reset(self):\n        self.start_time = None\n        self.elapsed\
      \ = 0.0\n    \n    def get_time(self):\n        if self.start_time is not None:\
      \  # running\n            return self.elapsed + (time.perf_counter() - self.start_time)\n\
      \        return self.elapsed\n\n\n\n\ndef packify(data_bit_string, pkt_len):\n\
      \    pkt_list = []\n    number_of_packets = int(len(data_bit_string) / pkt_len)\n\
      \    i = 0\n    for _ in range(number_of_packets):\n        pkt = data_bit_string[i:i+\
      \ pkt_len]\n        pkt_list.append(pkt)\n        i += 64\n    return pkt_list\n\
      \n\ndef crc_generator(bits): # bits should be a bit string |||  the output will\
      \ also be 32bit string\n    poly = 0x104C11DB7\n\n    data = int(bits,2)\n\n\
      \    data <<= 32\n\n    poly_length = poly.bit_length()\n\n    while data.bit_length()\
      \ >= poly_length:\n        data ^= poly << (data.bit_length() - poly_length)\n\
      \n    crc_bits = format(data, \"032b\")\n    # print(len(bits), len(crc_bits))\n\
      \    return crc_bits\n\n\ndef headify(pkt_list):\n    # the header format =>\
      \     | addr - 2bits | seq_no - 6bits  | payload - 64bits | crc - 32bits |\n\
      \    seq_no = 0\n    headed_pkt_list = []\n    addr = \"11\" # dummy address\n\
      \    for pkt in pkt_list:\n        headed_pkt = \"\"\n        headed_pkt +=\
      \ addr\n        seq_no_bits = format(seq_no, '06b') # convert the sequence number\
      \ into 6bit bitstring\n        headed_pkt += seq_no_bits\n        headed_pkt\
      \ += pkt\n        crc_bits = crc_generator(pkt)\n        headed_pkt += crc_bits\n\
      \        headed_pkt_list.append(headed_pkt)\n    \n    return headed_pkt_list\n\
      \n\n\n\n\n\nclass blk(gr.sync_block):  # other base classes are basic_block,\
      \ decim_block, interp_block\n\n\n    def __init__(self, message_file='None',\
      \ confirmation_file = 'None', request_number_file = 'None', timeout_period =\
      \ 5):  # only default arguments here\n\n        gr.sync_block.__init__(\n  \
      \          self,\n            name='advanced pickaxe packet sender',   # will\
      \ show up in GRC\n            in_sig=None,\n            out_sig=[np.uint8]\n\
      \        )\n        \n        self.message_file = message_file # contains the\
      \ message\n        self.confirmation_file = confirmation_file # contains whether\
      \ an ACK is received or not\n        self.request_number_file = request_number_file\
      \ # contains the request number of the received ACK\n        self.state = 0\n\
      \        self.final_packet_sent = False\n        self.seq = 0\n        self.msg_size\
      \ = 0 # this will store the number of bits in the message\n        self.pkt_size\
      \ = 64 # number of bits in the payload\n        self.current_pkt = \"\"\n  \
      \      self.timeout_period = timeout_period\n        self.indx = 0\n       \
      \ self.end_file_delimiter = \"1010101010101010101010101010101010101010101010101010101010101010\"\
      \n        self.end_file_sent = False\n\n\n        # loading the message and\
      \ making a payload list\n        self.payload_list = []\n        if (os.path.exists(self.message_file)):\n\
      \            with open(self.message_file, \"rb\") as msg_file:\n           \
      \     data = msg_file.read()\n                self.msg_size = len(data) * 8\n\
      \n                size_bit_string = format(self.msg_size, \"012b\")\n\n    \
      \            number_of_padding = (self.pkt_size -((self.msg_size + 12) % self.pkt_size))\
      \ % self.pkt_size\n\n                data_bitstring = ''.join(format(byte, \"\
      08b\") for byte in data)\n                padding_bitstring = '0' * number_of_padding\n\
      \n                final_bitstring = data_bitstring + padding_bitstring + size_bit_string\n\
      \n                pkt_list = packify(final_bitstring)\n\n                self.payload_list\
      \ = headify(pkt_list)\n        else:\n            print(\"the message file does\
      \ not exist\")\n            self.state = 4\n\n        self.timer = Stopwatch()\n\
      \        self.timer.start()\n\n\n\n\n\n                \n\n    def work(self,\
      \ input_items, output_items):\n\n        if (self.state == 0):\n           \
      \ if (self.timer > self.timeout_period):\n                self.timer.reset()\n\
      \                self.state = 1\n                return (0)\n            \n\
      \            if (os.path.exists(self.confirmation_file)):\n                with\
      \ open(self.confirmation_file, \"r\") as confirm_file:\n                   \
      \ c = str(confirm_file.read().strip())\n                    if (c == \"True\"\
      ):\n                        if (os.path.exists(self.request_number_file)):\n\
      \                            with open(self.request_number_file, \"r\") as req_file:\n\
      \                                rn = int(req_file.read().strip())\n       \
      \                         if (rn > self.seq):\n                            \
      \        self.timer.reset()\n                                    self.seq +=\
      \ 1\n                                    if (len(self.payload_list) > 0):\n\
      \                                        self.state = 2\n                  \
      \                      return (0)\n                                    else:\n\
      \                                        if (self.end_file_sent == True):\n\
      \                                            self.state = 4\n              \
      \                          else:\n                                         \
      \   self.state = 3\n                                        return (0)\n   \
      \                             else:\n                                    self.state\
      \ = 0\n                                    return (0)\n\n                  \
      \      else:\n                            print(\" the request number file did\
      \ not exist\")\n                            self.state = 7\n               \
      \     \n                    else:\n                        self.state = 0\n\
      \                        return (0)\n                        \n            else:\n\
      \                print(\" the confirm.txt file did not exists\")\n         \
      \       self.state = 7\n        \n\n\n        elif (self.state == 1):\n    \
      \        pkt_bytes = np.packbits(np.frombuffer(self.current_pkt.encode(\"ascii\"\
      ), dtype=np.uint8) - 48) # [43 65 34 34 23 23 54 23]\n            p_len = len(pkt_bytes)\n\
      \n            key0 = pmt.intern(\"packet_len\")\n            val0 = pmt.from_long(p_len)\n\
      \            self.add_item_tag(0,\n                              self.indx,\n\
      \                              key0,\n                              val0\n \
      \                             )\n            self.indx += p_len\n\n        \
      \    i = 0\n            while (i < p_len):\n                output_items[0][i]\
      \ = pkt_bytes[i]\n                i += 1\n            \n            # if (os.path.exists(self.confirmation_file)):\n\
      \            #     with open(self.confirmation_file, \"w\") as confirm_file:\n\
      \            #         confirm_file.write(\"False\")\n\n            self.state\
      \ = 0\n\n            self.timer.start()\n            return (p_len)\n      \
      \  \n\n\n\n        elif (self.state == 2): # sending the next packet\n     \
      \       self.current_pkt = self.payload_list.pop(0)\n\n            pkt_bytes\
      \ = np.packbits(np.frombuffer(self.current_pkt.encode(\"ascii\"), dtype=np.uint8)\
      \ - 48)\n            p_len = len(pkt_bytes)\n\n            key0 = pmt.intern(\"\
      packet_len\")\n            val0 = pmt.from_long(p_len)\n            self.add_item_tag(0,\n\
      \                              self.indx,\n                              key0,\n\
      \                              val0\n                              )\n     \
      \       self.indx += p_len\n\n            i = 0\n            while (i < p_len):\n\
      \                output_items[0][i] = pkt_bytes[i]\n                i += 1\n\
      \            \n            if (os.path.exists(self.confirmation_file)):\n  \
      \              with open(self.confirmation_file, \"w\") as confirm_file:\n \
      \                   confirm_file.write(\"False\")\n            \n          \
      \  self.state = 0\n\n            self.timer.start()\n            return(p_len)\n\
      \        \n\n\n\n\n        elif (self.state == 3):\n            # sending the\
      \ end of file delimeter packet\n            \n            pkt = self.end_file_delimiter\n\
      \n            seq_bits = format(self.seq, \"06b\")\n            pkt = seq_bits\
      \ + pkt\n\n            addr = \"11\"\n            pkt = addr + seq_bits\n\n\
      \            crc_bits = crc_generator(pkt)\n            pkt = pkt + crc_bits\n\
      \n            pkt_bytes = np.packbits(np.frombuffer(pkt.encode(\"ascii\"), dtype=np.uint8)\
      \ - 48)\n            p_len = len(pkt_bytes)\n\n            key0 = pmt.intern(\"\
      packet_len\")\n            val0 = pmt.from_long(p_len)\n            self.add_item_tag(0,\n\
      \                              self.indx,\n                              key0,\n\
      \                              val0\n                              )\n     \
      \       self.indx += p_len\n\n            i = 0\n            while (i < p_len):\n\
      \                output_items[0][i] = pkt_bytes[i]\n                i += 1\n\
      \            \n            if (os.path.exists(self.confirmation_file)):\n  \
      \              with open(self.confirmation_file, \"w\") as confirm_file:\n \
      \                   confirm_file.write(\"False\")\n\n            self.state\
      \ = 0\n            self.end_file_sent = True\n            self.current_pkt =\
      \ pkt\n            self.timer.start()\n            return (p_len)\n        \n\
      \n\n\n        elif (self.state == 4):\n            return (0)\n        \n  \
      \          \n\n\n            \n\n\n                \n\n        # output_items[0][:]\
      \ = input_items[0] * self.example_param\n        # return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    confirmation_file: ConFile
    maxoutbuf: '0'
    message_file: MsgFile
    minoutbuf: '0'
    request_number_file: RnFile
    timeout_period: '5'
  states:
    _io_cache: ('advanced pickaxe packet sender', 'blk', [('message_file', "'None'"),
      ('confirmation_file', "'None'"), ('request_number_file', "'None'"), ('timeout_period',
      '5')], [], [('0', 'byte', 1)], '', ['confirmation_file', 'message_file', 'request_number_file',
      'timeout_period'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 544.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: t1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1896, 444.0]
    rotation: 0
    state: true
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: rx1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2832, 1116.0]
    rotation: 0
    state: enabled
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: t1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [160, 1188.0]
    rotation: 0
    state: true
- name: virtual_source_0_0_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: rx1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 1876.0]
    rotation: 0
    state: enabled

connections:
- [blocks_repack_bits_bb_1, '0', blocks_file_sink_0, '0']
- [blocks_tagged_stream_mux_0, '0', virtual_sink_0_0, '0']
- [blocks_throttle2_0_0_0, '0', channels_channel_model_0, '0']
- [blocks_unpack_k_bits_bb_0, '0', digital_correlate_access_code_xx_ts_0_0, '0']
- [channels_channel_model_0, '0', digital_pfb_clock_sync_xxx_0, '0']
- [digital_constellation_decoder_cb_0_1, '0', digital_diff_decoder_bb_0_1, '0']
- [digital_constellation_modulator_0_0, '0', blocks_throttle2_0_0_0, '0']
- [digital_correlate_access_code_xx_ts_0_0, '0', blocks_repack_bits_bb_1, '0']
- [digital_costas_loop_cc_0_1, '0', digital_constellation_decoder_cb_0_1, '0']
- [digital_diff_decoder_bb_0_1, '0', digital_map_bb_0_1, '0']
- [digital_linear_equalizer_0, '0', virtual_sink_1, '0']
- [digital_map_bb_0_1, '0', blocks_unpack_k_bits_bb_0, '0']
- [digital_pfb_clock_sync_xxx_0, '0', digital_linear_equalizer_0, '0']
- [digital_protocol_formatter_bb_0, '0', blocks_tagged_stream_mux_0, '0']
- [epy_block_1, '0', blocks_tagged_stream_mux_0, '1']
- [epy_block_1, '0', digital_protocol_formatter_bb_0, '0']
- [virtual_source_0, '0', digital_constellation_modulator_0_0, '0']
- [virtual_source_0_0_0, '0', digital_costas_loop_cc_0_1, '0']

metadata:
  file_format: 1
  grc_version: 3.10.12.0
